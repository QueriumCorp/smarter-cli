name: Build-Release

on:
  workflow_dispatch:

env:
    app_name: smarter

jobs:
  create_release:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
    - name: Check out code
      uses: actions/checkout@v4

    - name: Get version
      id: vars
      run: echo ::set-output name=version::$(cat VERSION)

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.vars.outputs.version }}
        release_name: Release ${{ steps.vars.outputs.version }}
        draft: false
        prerelease: false

  build:
    name: Build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]
        go: ['1.22']

    steps:
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ matrix.go }}

    - name: Check out code
      uses: actions/checkout@v4

    - name: Get dependencies
      run: go get -v -t -d ./...

    - name: Get version
      id: vars
      run: echo ::set-output name=version::$(cat VERSION)

    - name: Build
      id: build
      run: |
        go build -v \
        -ldflags "-X main.version=${{ steps.vars.outputs.version }}" \
        -o ./${{ env.app_name }}-${{ matrix.os }}-${{ steps.vars.outputs.version }}


    - name: Get upload URL of existing release
      id: get_upload_url
      run: |
        UPLOAD_URL=$(curl --silent \
          --header "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
          "https://api.github.com/repos/${{ github.repository }}/releases/tags/${{ steps.vars.outputs.version }}" \
          | jq -r '.upload_url')
        echo "UPLOAD_URL=$UPLOAD_URL" >> $GITHUB_ENV

    - name: Upload Release Asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        UPLOAD_URL: ${{ env.UPLOAD_URL }}
      with:
        upload_url: ${{ env.UPLOAD_URL }}
        asset_path: ./${{ env.app_name }}-${{ matrix.os }}-${{ steps.vars.outputs.version }}
        asset_name: ${{ env.app_name }}-${{ matrix.os }}-${{ steps.vars.outputs.version }}
        asset_content_type: application/octet-stream
